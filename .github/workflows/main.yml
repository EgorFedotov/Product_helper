name: Foodgram workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    name: PEP8 Check
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        cd backend/foodgram/
        pip install -r requirements.txt 
    - name: Test flake8
      run: |
        cd backend/foodgram/
        python -m flake8

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref_name == 'master'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 
      - name: Login to Docker 
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push backend to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: backend/foodgram/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgramback:latest
      - name: Push frontend to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: frontend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgramfront:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    if: github.ref_name == 'master'
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker-compose stop
            sudo docker system prune -f
            sudo docker-compose rm web
            sudo systemctl stop nginx
            cd foodgram
            sudo rm .env
            touch .env
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo DEBUG=True >> .env
            echo ALLOWED_HOSTS=* >> .env
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgramfront:latest
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgramback:latest
            sudo docker compose up -d
            sudo docker-compose run web python3 manage.py migrate
            sudo docker-compose exec -T web python manage.py collectstatic --noinput

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!
